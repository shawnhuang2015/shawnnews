#!/bin/bash
DOWNLAD_PROMPT="DOWNLOAD: "

args=("$@")
if [ "$#" -ne 4 ]; then
    exit 1
fi


trim() {
    local var="$*"
    var="${var#"${var%%[![:space:]]*}"}"   # remove leading whitespace characters
    var="${var%"${var##*[![:space:]]}"}"   # remove trailing whitespace characters
    echo -n "$var"
}

declare -a OS_TYPE_VERSION
get_os_signature() {
    CENTOS_FILE="/etc/redhat-release"
    UBUNTU_FILE="/etc/issue"
    if [ -f ${CENTOS_FILE} ]; then
        version=`cat /etc/redhat-release | egrep -o '[0-9]{1}.[0-9]{1}.[0-9]{2}'`
        OS_TYPE_VERSION="centos_${version}"
    else
        if [ -f ${UBUNTU_FILE} ]; then
            version=`cat /etc/issue | egrep -o '[0-9]{2}.[0-9]{2}'`
            OS_TYPE_VERSION="ubuntu_${version}"
        else
            version=`system_profiler SPSoftwareDataType | egrep -o '[0-9]{2}.[0-9]{2}.[0-9]{1}'`
            OS_TYPE_VERSION="os_x_${version}"
        fi
    fi
}




fetch_method=${args[0]}
src=${args[1]}
subsrc=${args[2]}
tgt=${args[3]}
mkdir -p ${tgt}
rm -rf ${tgt}/*


get_os_signature

connect_str=$(grep "^${fetch_method}" config/sdk_resource.cfg | cut -d':' -f2-)
connect_str=$(trim ${connect_str})
if [ "${fetch_method}" == "local" ]; then
    tar -xzf "${connect_str}/*.tar.gz" -C .
else
    remote_dir="${connect_str}:${src}/${tgt}/${subsrc}/${OS_TYPE_VERSION}/"
    remote_f_name="$(curl ${remote_dir} -l 2> /dev/null | sort | tail -1)"
    echo "${DOWNLAD_PROMPT} ${remote_dir}${remote_f_name}"
    curl -O -J "${remote_dir}${remote_f_name}"
    tar -xzf "${remote_f_name}" -C .
fi


CC = g++
CFLAGS = -c -w -lstdc++ -fPIC
LIB_NAME = filters
LDFLAGS = -lstdc++ -shared
GDK_REALTIME = gsdk/include/realtime
GDK_RESTPP = $(GDK_REALTIME)/restpp
FILTER_DIR = src/customer/restpp_impl/filter_impl
JSON_PATH = gsdk/include/third_party/jsoncpp
INCLUDE = -Igsdk/include/third_party -I$(JSON_PATH)/include -I$(GDK_REALTIME)
SYS_SRC=$(JSON_PATH)/json_reader.cpp $(JSON_PATH)/json_writer.cpp $(JSON_PATH)/json_value.cpp
SOURCES=$(wildcard $(FILTER_DIR)/*.cpp) $(GDK_RESTPP)/idset.cpp $(GDK_RESTPP)/schemamanager.cpp
OBJECTS=$(SOURCES:.cpp=.o) $(SYS_SRC:.cpp=.o)
EXECUTABLE=$(FILTER_DIR)/$(LIB_NAME).so

opt: CC += -O3
opt: $(EXECUTABLE)
	@echo
	@echo Filter $(EXECUTABLE) CREATED

all: $(SOURCES) $(SYS_SRC) $(EXECUTABLE)
  
debug: CC += -g
debug: $(EXECUTABLE)

$(EXECUTABLE): $(OBJECTS)
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@

.cpp.o:
	$(CC) $(CFLAGS) $(LDFLAGS) $(INCLUDE) $< -o $@


clean:
	\rm -rf $(FILTER_DIR)/*.o $(EXECUTABLE) $(JSON_PATH)/*.o
